/* Alejandra Dur√°n üòé‚úåüèª - Erick Pe√±a üòé‚úåüèª - 13rian Vargas üòé‚úåüèª */

import java.util.Scanner;
import java.util.ArrayList; //Para usar las listas.

class Main {
  static Scanner sc = new Scanner(System.in);

  // Creaci√≥n de matrices de horarios para uso global.
  static String[][] horarioDuran = new String[4][6];
  static String[][] horarioPe√±a = new String[4][6];
  static String[][] horarioVargas = new String[4][6];
  static String nombreP;
  static long telefonoP;// Se usa long para recibir 10 d√≠gitos.
  static String dias[] = { "         ", " Lunes ", " Martes", "Mi√©rcoles", "Jueves ", "Viernes " };
  static String horas[] = { "8AM-10AM ", "10AM-12M ", " 12M-2PM ", " 3PM-5PM " };
  static int dia = 0;
  static int hora = 0;
  static String doc = "Dr. Pepito";

  public static void main(String[] args) {
    System.out.println("\nCl√≠nica de Cardiolog√≠a.");
    menu();
  }// cierra main ‚úÖ

  public static void menu() {
    System.out.println("\n> > > MENU < < <");
    System.out.println("Seleccione una opci√≥n:");
    System.out.println("(1) Revisar signos vitales.");
    System.out.println("(2) Agendar cita m√©dica");
    System.out.println("(3) Salir.");

    int opcion = sc.nextInt();

    switch (opcion) {
      case 1:
        calcularSignos(); // Quitamos datos del paciente porque queremos que calcularSignos() sea una funci√≥n r√°pida.
        break;
      case 2:
        datosPaciente();
        seleccionarDoctor();
        break;
      case 3:
        System.out.println("\nGracias por preferirnos!");
        System.exit(0);
        break;
      default:
        System.out.println("\n¬° ¬° ¬° Debe seleccionar una opci√≥n v√°lida. Intente de nuevo. ! ! !");
        menu();
        break;
    }// cierra switch
  }// cierra menu ‚úÖ

  public static void datosPaciente() {
    sc.nextLine(); // Limpia el buffer.

    do {
      System.out.println("\nNombre del paciente:");
      nombreP = sc.nextLine().toUpperCase();
    } while (nombreP.isEmpty()); // Verifica si se ingres√≥ un nombre.
    // cierra do-while.

    int edadP;
    do {
      System.out.println("\nEdad del paciente en a√±os (por ejemplo: 40):");
      while (!sc.hasNextInt()) { // !hasNextInt() verifica si es un n√∫mero entero "no hay un pr√≥ximo entero".
        System.out.println("\n\n¬°Debe ingresar un n√∫mero entero para la edad!");
        sc.nextLine(); // Limpia el buffer.
      } // cierra while
      edadP = sc.nextInt();
      if (edadP <= 0 || edadP > 150) { // Verifica si la edad est√° fuera del rango.
        System.out.println("\n\n¬°La edad debe estar entre 0 y 150 a√±os!");
      } // cierra if
    } while (edadP <= 0 || edadP > 150); // Continua si la edad est√© fuera del rango.
    // cierra do-while

    double pesoP;
    do {
      System.out.println("\nPeso del paciente en kilogramos (kg) (por ejemplo: 70.5):");
      while (!sc.hasNextDouble()) {// !hasNextDouble() verifica si es un n√∫mero racional "no hay un pr√≥ximo
                                   // racional".
        System.out.println("\n\n¬°Debe ingresar un n√∫mero para el peso!");
        sc.nextLine(); // Limpia el buffer.
      } // cierra while
      pesoP = sc.nextDouble();
      if (pesoP < 2.5 || pesoP > 365) { // Verifica si el peso est√° fuera del rango.
        System.out.println("\n¬°El peso debe estar entre 2.5kg y 365kg!");
      } // cierra if
    } while (pesoP < 2.5 || pesoP > 365); // Continua si el peso est√© fuera del rango.
    // cierra do-while

    int alturaP;
    do {
      System.out.println("\nAltura del paciente en cent√≠metros (cm) (por ejemplo: 150):");
      while (!sc.hasNextInt()) {// !hasNextInt() verifica si es un n√∫mero entero "no hay un pr√≥ximo entero".
        System.out.println("\n\n¬°Debe ingresar un n√∫mero entero para la altura!");
        sc.nextLine(); // Limpia el buffer.
      } // cierra while
      alturaP = sc.nextInt();
      if (alturaP < 46 || alturaP > 215) { // Verifica si la altura est√° fuera del rango.
        System.out.println("\n¬°La altura debe estar entre 46cm y 215cm!");
      } // cierra if
    } while (alturaP < 46 || alturaP > 215); // Continua si la altura est√° fuera del rango.
    // cierra do-while

    sc.nextLine(); // Limpia el buffer.

    String generoP = ""; // Establecemos vacio.
    while (!(generoP.equalsIgnoreCase("F") || generoP.equalsIgnoreCase("M"))) { // Verifica si es F o M.
      do {
        System.out.println("\nG√©nero del paciente (F) Femenino, (M) Masculino:");
        generoP = sc.nextLine().toUpperCase();// Convierte la entrada a may√∫sculas para comparar.
      } while (generoP.isEmpty()); // Verifica si se ingres√≥ un dato.
      // cierra do-while
    } // cierra while

    String tipoSangreP = "";
    while (!(tipoSangreP.equalsIgnoreCase("A+") || tipoSangreP.equalsIgnoreCase("A-")
        || tipoSangreP.equalsIgnoreCase("AB+") || tipoSangreP.equalsIgnoreCase("AB-")
        || tipoSangreP.equalsIgnoreCase("B+") || tipoSangreP.equalsIgnoreCase("B-")
        || tipoSangreP.equalsIgnoreCase("O+") || tipoSangreP.equalsIgnoreCase("O-"))) { // Verifica tipo de sangre.
      do {
        System.out.println("\nTipo de sangre del paciente (por ejemplo: AB+):");
        tipoSangreP = sc.nextLine().toUpperCase();// Convierte la entrada a may√∫sculas para comparar.
      } while (tipoSangreP.isEmpty()); // Verifica si se ingres√≥ un dato.
      // cierra do-while
    } // cierra while

    String direccionP;
    do {
      System.out.println("\nDirecci√≥n de residencia:");
      direccionP = sc.nextLine();
    } while (direccionP.isEmpty()); // Verifica si se ingres√≥ un dato.
    // cierra do-while

    sc.nextLine(); // Limpia el buffer.

    do {
      System.out.println("\nTel√©fono:");
      while (!sc.hasNextLong()) {// !hasNextInt() verifica si es un n√∫mero entero "no hay un pr√≥ximo entero".
        System.out.println("\n\n¬°Debe ingresar un n√∫mero entero para el tel√©fono!");
        sc.nextLine(); // Limpia el buffer.
      } // cierra while
      telefonoP = sc.nextLong();
    } while (telefonoP <= 0); // Verifica que sea un n√∫mero positivo.
    // cierra do-while

    System.out.println("\n\n¬°Paciente registrado con √©xito!\n");

  }// cierra datosPaciente ‚úÖ

  public static void calcularSignos() {
    System.out.println(
        "\n\nSeleccione una opci√≥n: \n(1) Ver estado de tensi√≥n arterial \n(2) Ver estado de frecuencia cardiaca \n(3) Ver estado de frecuencia respiratoria \n(4) Ver estado de temperatura \n(5) Ver estado de glucosa \n(6) Ver estado de saturaci√≥n de oxigeno \n(7) Cancelar ");

    int opcion = sc.nextInt();

    switch (opcion) {
      case 1:
        int sistolica = 0, diastolica = 0;

        do {
          System.out.println("\nIngrese valores de la tensi√≥n arterial.");
          System.out.println("Sist√≥lica:");
          sistolica = sc.nextInt();
          System.out.println("Diast√≥lica:");
          diastolica = sc.nextInt();

          if (sistolica < 0 || diastolica < 0) {
            System.out.println("Por favor ingrese valores v√°lidos.");
          }
        } while (sistolica < 0 || diastolica < 0);

        if (sistolica < 80 && diastolica < 60) {
          System.out.println("Se encuentra hipotenso.");
        } else if (sistolica <= 120 && sistolica >= 80 && diastolica <= 85 && diastolica >= 80) {
          System.out.println("Se encuentra normal");
        } else if (sistolica <= 139 && sistolica >= 130 && diastolica <= 90 && diastolica >= 85) {
          System.out.println("La tensi√≥n arterial se encuentra alta.");
        } else {
          System.out.println("Se encuentra hipertenso.");
        }
        break;
      case 2:
        System.out.println("\nIngrese valores de la frecuencia cardiaca.");
        int frecuenciac = sc.nextInt();
        if (frecuenciac >= 60 && frecuenciac <= 100) {
          System.out.println("Se encuentra en estado normal.");
        } else if (frecuenciac < 60) {
          System.out.println("Se encuentra en estado de bradicardia.");
        } else {
          System.out.println("Se encuentra en estado de taquicardia.");
        }
        break;
      case 3:
        System.out.println("\nIngrese valores de la frecuencia respiratoria por minuto.");
        int frecuenciar = sc.nextInt();
        if (frecuenciar >= 12 && frecuenciar <= 21) {
          System.out.println("Se encuentra en estado normal.");
        } else if (frecuenciar < 12) {
          System.out.println("Se encuentra en estado de bradiapnea.");

        } else {
          System.out.println("Se encuentra en estado de taquiapnea.");
        }
        break;
      case 4:
        System.out.println("\nIngrese valores de la temperatura.");
        double temperatura = sc.nextDouble();
        if (temperatura >= 36 && temperatura <= 37.5) {
          System.out.println("Se encuentra en estado normal.");
        } else if (temperatura < 36) {
          System.out.println("Se encuentra en estado de hipotermia.");
        } else if (temperatura >= 37.6 && temperatura <= 41) {
          System.out.println("Se encuentra en estado de fiebre.");
        } else {
          System.out.println("Se encuentra en estado de hipertermia.");
        }
        break;
      case 5:
        System.out.println("\nIngrese valores de la glucosa(ayunas).");
        double glucosa = sc.nextDouble();
        if (glucosa >= 60 && glucosa <= 110) {
          System.out.println("Se encuentra en estado normal.");
        } else if (glucosa < 60) {
          System.out.println("Se encuentra en estado de hipoglucemia.");

        } else {
          System.out.println("Se encuentra en estado de hiperglicemia.");
        }
        break;
      case 6:
        boolean pacienteSaturado = false;
        while (!pacienteSaturado) {
          System.out.println("\nIngrese valores de la saturaci√≥n de ox√≠geno:");
          double saturacion = sc.nextDouble();

          if (saturacion >= 90 && saturacion <= 99) {
            System.out.println("El paciente est√° normal.");
            pacienteSaturado = true;
          } else if (saturacion < 90) {
            System.out.println("El paciente est√° en estado de hipoxia.");

          } else {
            System.out.println("El valor ingresado no es v√°lido.");

          }// cierre else
        } // cierre while
        break;
        case 7:
          System.exit(0);
          break;
        default:
        System.out.println("Debe ingresar un valor v√°lido!");
        break;
    } // cierre switch

  } // cierra calcularSignos ‚úÖ

  public static ArrayList<String> doctores() { /* crea la lista de doctores */
    ArrayList<String> cardiologos = new ArrayList<String>();
    // Lista de cardiologos.
    cardiologos.add("Dra. Dur√°n");
    cardiologos.add("Dr. Pe√±a");
    cardiologos.add("Dr. Vargas");
    return cardiologos;
  }// cierra doctores ‚úÖ

  public static void printDoctores() { /* metodo para imprimir lista de doctores */
    ArrayList<String> listaDoctores = doctores();
    System.out.println("\nLista de doctores:");
    for (int i = 0; i < listaDoctores.size(); i++) {
      System.out.println("(" + (i + 1) + ") " + listaDoctores.get(i));
    } // cierra for
  }// cierra printDoctores ‚úÖ

  public static void citasDuran() {
    // Inicializar los elementos del arreglo horarioVargas
    for (int i = 0; i < horarioDuran.length; i++) {
      for (int j = 0; j < horarioDuran[i].length; j++) {
        if (j == 0) {
          horarioDuran[i][j] = horas[i];
        } else {
          horarioDuran[i][j] = "   ‚úî   Ô∏è"; // entienda ‚úî como "disponible".
        }
      } // cierra for j
    } // cierra for i

    // Imprimir los d√≠as de la semana
    for (int i = 0; i < dias.length; i++) {
      System.out.print(dias[i] + " ");
    }
    System.out.println("");

    // Imprimir el horario
    for (int i = 0; i < horarioDuran.length; i++) {
      for (int j = 0; j < horarioDuran[i].length; j++) {
        System.out.print(horarioDuran[i][j] + " ");
      } // cierra for j
      System.out.println("");
    } // cierra for i
  }// cierra citasDuran ‚úÖ

  public static void citasPe√±a() {
    // Inicializar los elementos del arreglo horarioPe√±a
    for (int i = 0; i < horarioPe√±a.length; i++) {
      for (int j = 0; j < horarioPe√±a[i].length; j++) {
        if (j == 0) {
          horarioPe√±a[i][j] = horas[i];
        } else {
          horarioPe√±a[i][j] = "   ‚úî   Ô∏è"; // entienda ‚úî como "disponible".
        }
      } // cierra for j
    } // cierra for i

    // Imprimir los d√≠as de la semana
    for (int i = 0; i < dias.length; i++) {
      System.out.print(dias[i] + " ");
    }
    System.out.println("");

    // Imprimir el horario
    for (int i = 0; i < horarioPe√±a.length; i++) {
      for (int j = 0; j < horarioPe√±a[i].length; j++) {
        System.out.print(horarioPe√±a[i][j] + " ");
      } // cierra for j
      System.out.println("");
    } // cierra for i
  }// cierra citasPe√±a ‚úÖ

  public static void citasVargas() {

    // Declarar variable de tipo String
    String dias[] = { "    x    ", " Lunes ", " Martes", "Mi√©rcoles", "Jueves ", "Viernes " };
    String horas[] = { "8AM-10AM ", "10AM-12M ", " 12M-2PM ", " 3PM-5PM " };

    // Inicializar los elementos del arreglo horarioVargas
    for (int i = 0; i < horarioVargas.length; i++) {
      for (int j = 0; j < horarioVargas[i].length; j++) {
        if (j == 0) {
          horarioVargas[i][j] = horas[i];
        } else {
          horarioVargas[i][j] = "   ‚úî   Ô∏è"; // entienda 0 como "disponible" y 1 como "ocupado".
        }
      } // cierra for j
    } // cierra for i

    // Imprimir los d√≠as de la semana
    for (int i = 0; i < dias.length; i++) {
      System.out.print(dias[i] + " ");
    }
    System.out.println("");

    // Imprimir el horario
    for (int i = 0; i < horarioVargas.length; i++) {
      for (int j = 0; j < horarioVargas[i].length; j++) {
        System.out.print(horarioVargas[i][j] + " ");
      } // cierra for j
      System.out.println("");
    } // cierra for i

  }// cierra citasVargas ‚úÖ

  public static void seleccionarDoctor() {
    printDoctores();
    System.out.println("(4) Cancelar."); // A√±ade la opci√≥n de salida seg√∫n el tama√±o de la lista de doctores.
    System.out.println("\n\nSeleccione el doctor a consultar horario:");
    int opcionDr = sc.nextInt();
    sc.nextLine(); // Limpia el buffer.

    switch (opcionDr) {
      case 1:
        doc = "Dra. Dur√°n";
        citasDuran();
        seleccionarDia();
        break;
      case 2:
        doc = "Dr. Pe√±a";
        citasPe√±a();
        seleccionarDia();
        break;
      case 3:
        doc = "Dr. Vargas";
        citasVargas();
        seleccionarDia();
        break;
      case 4:
        System.out.println("\nGracias por preferirnos!");
        System.exit(0);
        break;
      default:
        System.out.println("\nDoctor no encontrado. Intente de nuevo!");
        seleccionarDoctor();
        break;
    }// cierra switch
  }// cierra seleccionarDoctor ‚úÖ

  public static void seleccionarDia() {
    System.out.println("\nSeleccione el d√≠a de la semana.");
    System.out.println("(1) Lunes.");
    System.out.println("(2) Martes.");
    System.out.println("(3) Mi√©rcoles.");
    System.out.println("(4) Jueves.");
    System.out.println("(5) Viernes.");
    System.out.println("(6) Cancelar.");

    int opcionDia = sc.nextInt();

    switch (opcionDia) {
      case 1:
        System.out.println("Lunes seleccionado.");
        dia = 1;
        seleccionarHora();
        break;
      case 2:
        System.out.println("Martes seleccionado.");
        dia = 2;
        seleccionarHora();
        break;
      case 3:
        System.out.println("Mi√©rcoles seleccionado.");
        dia = 3;
        seleccionarHora();
        break;
      case 4:
        System.out.println("Jueves seleccionado.");
        dia = 4;
        seleccionarHora();
        break;
      case 5:
        System.out.println("Viernes seleccionado.");
        dia = 5;
        seleccionarHora();
        break;
      case 6:
        System.out.println("\nGracias por preferirnos!");
        System.exit(0);
        break;
      default:
        System.out.println("\nD√≠a incorrecto. Intente de nuevo!");
        seleccionarDia();
        break;
    }// cierra switch
  }// cierra seleccionarDia ‚úÖ

  public static void seleccionarHora() {
    System.out.println("\nSeleccione franja horaria.");
    System.out.println("(1) (8AM-10AM)");
    System.out.println("(2) (10AM-12M)");
    System.out.println("(3) (12M-2PM)");
    System.out.println("(4) (3PM-5PM)");
    System.out.println("(5) (Cancelar)");

    int opcionHora = sc.nextInt();

    switch (opcionHora) {
      case 1:
        hora = 1;
        datosCita();
        break;
      case 2:
        hora = 2;
        datosCita();
        break;
      case 3:
        hora = 3;
        datosCita();
        break;
      case 4:
        hora = 5;// la hora 4 es el almuerzo.
        datosCita();
        break;
      case 5:
        System.out.println("\nGracias por preferirnos!");
        System.exit(0);
        break;
      default:
        System.out.println("\nHora incorrecta. Intente de nuevo!");
        seleccionarHora();
        break;
    }// cierra switch
  }// cierra seleccionarHora ‚úÖ

  public static void datosCita() {
    if (doc.equalsIgnoreCase("Dra. Dur√°n")) { /* Aqu√≠ se gestiona el agendamiento. */
      for (int i = 0; i < horarioDuran.length; i++) {
        for (int j = 0; j < horarioDuran[i].length; j++) {
          if (i == hora && j == dia) {
            horarioDuran[i - 1][j] = "   ‚úñÔ∏è   Ô∏èÔ∏è";
          } // cierra if
        } // cierra for j
      } // cierra for i
      /* Aqui lo imprimo para verificar, luego se borra. */
      for (int i = 0; i < horarioDuran.length; i++) {
        for (int j = 0; j < horarioDuran[i].length; j++) {
          System.out.print(horarioDuran[i][j] + " ");
        } // cierra for j
        System.out.println("");
      } // cierra for i
    } else if (doc.equalsIgnoreCase("Dr. Pe√±a")) { /* Aqu√≠ se gestiona el agendamiento. */
      for (int i = 0; i < horarioPe√±a.length; i++) {
        for (int j = 0; j < horarioPe√±a[i].length; j++) {
          if (i == hora && j == dia) {
            horarioPe√±a[i - 1][j] = "   ‚úñÔ∏è   Ô∏èÔ∏è";
          } // cierra if
        } // cierra for j
      } // cierra for i
      /* Aqui lo imprimo para verificar, luego se borra. */
      for (int i = 0; i < horarioPe√±a.length; i++) {
        for (int j = 0; j < horarioPe√±a[i].length; j++) {
          // System.out.print(dias[i] + " ");//OJO
          System.out.print(horarioPe√±a[i][j] + " ");
        } // cierra for j
        System.out.println("");
      } // cierra for i
    } else if (doc.equalsIgnoreCase("Dr. Vargas")) { /* Aqu√≠ se gestiona el agendamiento. */
      for (int i = 0; i < horarioVargas.length; i++) {
        for (int j = 0; j < horarioVargas[i].length; j++) {
          if (i == hora && j == dia) {
            horarioVargas[i - 1][j] = "   ‚úñÔ∏è   Ô∏èÔ∏è";
          } // cierra if
        } // cierra for j
      } // cierra for i
      /* Aqui lo imprimo para verificar, luego se borra. */
      for (int i = 0; i < horarioVargas.length; i++) {
        for (int j = 0; j < horarioVargas[i].length; j++) {
          System.out.print(horarioVargas[i][j] + " ");
        } // cierra for j
        System.out.println("");
      } // cierra for i
    } // cierra if
    mostrarCita();

  }// cierra datosCita ‚úÖ

  public static void mostrarCita() {
    System.out.println("\n\nCita agendada con exito!\n\n" + nombreP + ", usted agend√≥ una cita para el d√≠a" + dias[dia] + " en el rango de " + horas[hora]
        + "con el/la " + doc + ".\nSe le enviar√° un mensaje de texto al n√∫mero " + telefonoP + ".");

  }// cierra mostrarCita Ô∏è‚úÖ

}// cierra class ‚úÖ